--- 
# TinyTapeout project information
project:
  wokwi_id:    349717996940296786        # If using wokwi, set this to your project's ID
#  source_files:        # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. Source files must be in ./src
#    - counter.v
#    - decoder.v
#  top_module:  "seven_segment_seconds"      # put the name of your top module here, make it unique by prepending your github username

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "Jos van 't Hof"      # Your name
  discord:      ""      # Your discord handle - make sure to include the # part as well
  title:        "Convolutional Encoder"      # Project title
  description:  "A (7, 1/2) Convolutional Encoder following the CCSDS 131.0-B-4 standard."      # Short description of what your project does
  how_it_works: "ToDo"      # Longer description of how the project works
  how_to_test:  "To reset the shift register and encoder, pull the reset input (IN1) low and provide a clock cycle on the clock input (IN0). This resets the phase of the internal clock divider circuit. Pull the reset input (IN1) high again. Next pull the write_not_shift input (IN2) high to set the shift register to write mode. Set a 5-bit input into the shift registers using inputs (IN3 to IN7), for example 0b100110. Provide two clock cycles on the clock input (IN0) to write the input into the shift register and clear the encoder. Pull the write_not_shift input (IN2) low to start shifting. The first output of the encoder should now be visible on the 7-segment display. Provide 2 x (6 + 5) - 1 = 21 clock pulses, for each clock pulse one output bit is displayed on the 7 segment display."
  external_hw:  ""      # Describe any external hardware needed
  language:     "wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required) we are expecting max clock frequency to be ~6khz. Provided on input 0.
  picture:      ""      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - clock
    - reset
    - write_not_shift
    - shift_input_0
    - shift_input_1
    - shift_input_2
    - shift_input_3
    - shift_input_4
  outputs:
    - segment a         # a description of what the outputs do
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - segment dp (used to indicate clock)

